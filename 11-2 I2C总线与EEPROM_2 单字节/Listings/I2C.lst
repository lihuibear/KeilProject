C51 COMPILER V9.54   I2C                                                                   02/16/2024 17:36:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\I2C.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE I2C.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\I2C.lst) TABS(2) OBJECT(.\Objects\I2C.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          
   4          #define I2CDelay()  {_nop_();_nop_();_nop_();_nop_();}
   5          sbit I2C_SCL = P3^7;
   6          sbit I2C_SDA = P3^6;
   7          
   8          /* 产生总线起始信号 */
   9          void I2CStart()
  10          {
  11   1          I2C_SDA = 1; //首先确保SDA、SCL都是高电平
  12   1          I2C_SCL = 1;
  13   1          I2CDelay();
  14   1          I2C_SDA = 0; //先拉低SDA
  15   1          I2CDelay();
  16   1          I2C_SCL = 0; //再拉低SCL
  17   1      }
  18          /* 产生总线停止信号 */
  19          void I2CStop()
  20          {
  21   1          I2C_SCL = 0; //首先确保SDA、SCL都是低电平
  22   1          I2C_SDA = 0;
  23   1          I2CDelay();
  24   1          I2C_SCL = 1; //先拉高SCL
  25   1          I2CDelay();
  26   1          I2C_SDA = 1; //再拉高SDA
  27   1          I2CDelay();
  28   1      }
  29          /* I2C总线写操作，dat-待写入字节，返回值-从机应答位的值 */
  30          bit I2CWrite(unsigned char dat)
  31          {
  32   1          bit ack;  //用于暂存应答位的值
  33   1          unsigned char mask;  //用于探测字节内某一位值的掩码变量
  34   1      
  35   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  36   1          {
  37   2              if ((mask&dat) == 0)  //该位的值输出到SDA上
  38   2                  I2C_SDA = 0;
  39   2              else
  40   2                  I2C_SDA = 1;
  41   2              I2CDelay();
  42   2              I2C_SCL = 1;          //拉高SCL
  43   2              I2CDelay();
  44   2              I2C_SCL = 0;          //再拉低SCL，完成一个位周期
  45   2          }
  46   1          I2C_SDA = 1;   //8位数据发送完后，主机释放SDA，以检测从机应答
  47   1          I2CDelay();
  48   1          I2C_SCL = 1;   //拉高SCL
  49   1          ack = I2C_SDA; //读取此时的SDA值，即为从机的应答值
  50   1          I2CDelay();
  51   1          I2C_SCL = 0;   //再拉低SCL完成应答位，并保持住总线
  52   1      
  53   1          return (~ack); //应答值取反以符合通常的逻辑：
  54   1                         //0=不存在或忙或写入失败，1=存在且空闲或写入成功
C51 COMPILER V9.54   I2C                                                                   02/16/2024 17:36:27 PAGE 2   

  55   1      }
  56          /* I2C总线读操作，并发送非应答信号，返回值-读到的字节 */
  57          unsigned char I2CReadNAK()
  58          {
  59   1          unsigned char mask;
  60   1          unsigned char dat;
  61   1      
  62   1          I2C_SDA = 1;  //首先确保主机释放SDA
  63   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  64   1          {
  65   2              I2CDelay();
  66   2              I2C_SCL = 1;      //拉高SCL
  67   2              if(I2C_SDA == 0)  //读取SDA的值
  68   2                  dat &= ~mask; //为0时，dat中对应位清零
  69   2              else
  70   2                  dat |= mask;  //为1时，dat中对应位置1
  71   2              I2CDelay();
  72   2              I2C_SCL = 0;      //再拉低SCL，以使从机发送出下一位
  73   2          }
  74   1          I2C_SDA = 1;   //8位数据发送完后，拉高SDA，发送非应答信号
  75   1          I2CDelay();
  76   1          I2C_SCL = 1;   //拉高SCL
  77   1          I2CDelay();
  78   1          I2C_SCL = 0;   //再拉低SCL完成非应答位，并保持住总线
  79   1      
  80   1          return dat;
  81   1      }
  82          /* I2C总线读操作，并发送应答信号，返回值-读到的字节 */
  83          unsigned char I2CReadACK()
  84          {
  85   1          unsigned char mask;
  86   1          unsigned char dat;
  87   1      
  88   1          I2C_SDA = 1;  //首先确保主机释放SDA
  89   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  90   1          {
  91   2              I2CDelay();
  92   2              I2C_SCL = 1;      //拉高SCL
  93   2              if(I2C_SDA == 0)  //读取SDA的值
  94   2                  dat &= ~mask; //为0时，dat中对应位清零
  95   2              else
  96   2                  dat |= mask;  //为1时，dat中对应位置1
  97   2              I2CDelay();
  98   2              I2C_SCL = 0;      //再拉低SCL，以使从机发送出下一位
  99   2          }
 100   1          I2C_SDA = 0;   //8位数据发送完后，拉低SDA，发送应答信号
 101   1          I2CDelay();
 102   1          I2C_SCL = 1;   //拉高SCL
 103   1          I2CDelay();
 104   1          I2C_SCL = 0;   //再拉低SCL完成应答位，并保持住总线
 105   1      
 106   1          return dat;
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    194    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.54   I2C                                                                   02/16/2024 17:36:27 PAGE 3   

   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
