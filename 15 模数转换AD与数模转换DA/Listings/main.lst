C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:17:30 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include <reg52.h>
   3          
   4          bit flag300ms = 1;       //300ms定时标志
   5          unsigned char T0RH = 0;  //T0重载值的高字节
   6          unsigned char T0RL = 0;  //T0重载值的低字节
   7          
   8          void ConfigTimer0(unsigned int ms);
   9          unsigned char GetADCValue(unsigned char chn);
  10          void ValueToString(unsigned char *str, unsigned char val);
  11          extern void I2CStart();
  12          extern void I2CStop();
  13          extern unsigned char I2CReadACK();
  14          extern unsigned char I2CReadNAK();
  15          extern bit I2CWrite(unsigned char dat);
  16          extern void InitLcd1602();
  17          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
  18          
  19          void main()
  20          {
  21   1          unsigned char val;
  22   1          unsigned char str[10];
  23   1          
  24   1          EA = 1;            //开总中断
  25   1          ConfigTimer0(10);  //配置T0定时10ms
  26   1          InitLcd1602();     //初始化液晶    
  27   1          LcdShowStr(0, 0, "AIN0  AIN1  AIN3");  //显示通道指示
  28   1          
  29   1          while (1)
  30   1          {
  31   2              if (flag300ms)
  32   2              {
  33   3                  flag300ms = 0;
  34   3                  //显示通道0的电压
  35   3                  val = GetADCValue(0);     //获取ADC通道0的转换值
  36   3                  ValueToString(str, val);  //转为字符串格式的电压值
  37   3                  LcdShowStr(0, 1, str);    //显示到液晶上
  38   3                  //显示通道1的电压
  39   3                  val = GetADCValue(1);
  40   3                  ValueToString(str, val);
  41   3                  LcdShowStr(6, 1, str);
  42   3                  //显示通道3的电压
  43   3                  val = GetADCValue(3);
  44   3                  ValueToString(str, val);
  45   3                  LcdShowStr(12, 1, str);
  46   3              }
  47   2          }
  48   1      }
  49          unsigned char GetADCValue(unsigned char chn)
  50          {
  51   1        unsigned char val;
  52   1      
  53   1        I2CStart();
  54   1        if(!I2CWrite(0x48<<1))
C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:17:30 PAGE 2   

  55   1        {
  56   2          I2CStop();
  57   2          return 0;
  58   2        }
  59   1        I2CWrite(0x40 | chn);
  60   1        I2CStart();
  61   1        I2CWrite(0x48<<1 | 0x01);
  62   1        I2CReadACK();
  63   1        val = I2CReadNAK();
  64   1        I2CStop();
  65   1      
  66   1        return val;
  67   1      }
  68          
  69          void  ValueToString(unsigned char *str, unsigned char val)
  70          {
  71   1        val = (val*25)/255;
  72   1        str[0] = (val/10) + '0';
  73   1        str[1] = '.';
  74   1        str[2] = (val%10) + '0';
  75   1        str[3] = 'V';
  76   1        str[4] = '\0';
  77   1      }
  78          /* 配置并启动T0，ms-T0定时时间 */
  79          void ConfigTimer0(unsigned int ms)
  80          {
  81   1          unsigned long tmp;  //临时变量
  82   1          
  83   1          tmp = 11059200 / 12;      //定时器计数频率
  84   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
  85   1          tmp = 65536 - tmp;        //计算定时器重载值
  86   1          tmp = tmp + 32;           //补偿中断响应延时造成的误差
  87   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
  88   1          T0RL = (unsigned char)tmp;
  89   1          TMOD &= 0xF0;   //清零T0的控制位
  90   1          TMOD |= 0x01;   //配置T0为模式1
  91   1          TH0 = T0RH;     //加载T0重载值
  92   1          TL0 = T0RL;
  93   1          ET0 = 1;        //使能T0中断
  94   1          TR0 = 1;        //启动T0
  95   1      }
  96          /* T0中断服务函数，执行300ms定时 */
  97          void InterruptTimer0() interrupt 1
  98          {
  99   1          static unsigned char tmr300ms = 0;
 100   1          
 101   1          TH0 = T0RH;  //重新加载重载值
 102   1          TL0 = T0RL;
 103   1          tmr300ms++;
 104   1          if (tmr300ms >= 30)  //定时300ms
 105   1          {
 106   2              tmr300ms = 0;
 107   2              flag300ms = 1;
 108   2          }
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    379    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:17:30 PAGE 3   

   DATA SIZE        =      3      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
