C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:00:11 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include <reg52.h>
   3          
   4          sbit ADDR3 = P1^3;
   5          sbit ENLED = P1^4;
   6          
   7          unsigned char code LedChar[] = {  //数码管显示字符转换表
   8              0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
   9              0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E
  10          };
  11          unsigned char LedBuff[6] = {  //数码管显示缓冲区
  12              0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  13          };
  14          unsigned char T0RH = 0;  //T0重载值的高字节
  15          unsigned char T0RL = 0;  //T0重载值的低字节
  16          
  17          extern bit irflag;
  18          extern unsigned char ircode[4];
  19          extern void InitInfrared(void);
  20          void ConfigTimer0(unsigned int ms);
  21          
  22          void main()
  23          {
  24   1          EA = 1;      //开总中断
  25   1          ENLED = 0;   //使能选择数码管
  26   1          ADDR3 = 1;
  27   1          InitInfrared();   //初始化红外功能
  28   1          ConfigTimer0(1);  //配置T0定时1ms
  29   1          PT0 = 1;        //配置T0中断为高优先级，启用本行可消除接收时的闪烁
  30   1          
  31   1          while (1)
  32   1          {
  33   2              if (irflag)  //接收到红外数据时刷新显示
  34   2              {
  35   3                  irflag = 0;
  36   3                  LedBuff[5] = LedChar[ircode[0] >> 4];  //用户码显示
  37   3                  LedBuff[4] = LedChar[ircode[0]&0x0F];
  38   3                  LedBuff[1] = LedChar[ircode[2] >> 4];  //键码显示
  39   3                  LedBuff[0] = LedChar[ircode[2]&0x0F];
  40   3              }
  41   2          }
  42   1      }
  43          /* 配置并启动T0，ms-T0定时时间 */
  44          void ConfigTimer0(unsigned int ms)
  45          {
  46   1          unsigned long tmp;  //临时变量
  47   1          
  48   1          tmp = 11059200 / 12;      //定时器计数频率
  49   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
  50   1          tmp = 65536 - tmp;        //计算定时器重载值
  51   1          tmp = tmp + 18;           //补偿中断响应延时造成的误差
  52   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
  53   1          T0RL = (unsigned char)tmp;
  54   1          TMOD &= 0xF0;   //清零T0的控制位
C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:00:11 PAGE 2   

  55   1          TMOD |= 0x01;   //配置T0为模式1
  56   1          TH0 = T0RH;     //加载T0重载值
  57   1          TL0 = T0RL;
  58   1          ET0 = 1;        //使能T0中断
  59   1          TR0 = 1;        //启动T0
  60   1      }
  61          /* 数码管动态扫描刷新函数，需在定时中断中调用 */
  62          void LedScan()
  63          {
  64   1          static unsigned char i = 0;  //动态扫描索引
  65   1          
  66   1          P0 = 0xFF;                  //关闭所有段选位，显示消隐
  67   1          P1 = (P1 & 0xF8) | i;       //位选索引值赋值到P1口低3位
  68   1          P0 = LedBuff[i];            //缓冲区中索引位置的数据送到P0口
  69   1          if (i < sizeof(LedBuff)-1)  //索引递增循环，遍历整个缓冲区
  70   1              i++;
  71   1          else
  72   1              i = 0;
  73   1      }
  74          /* T0中断服务函数，执行数码管扫描显示 */
  75          void InterruptTimer0() interrupt 1
  76          {
  77   1          TH0 = T0RH;  //重新加载重载值
  78   1          TL0 = T0RL;
  79   1          LedScan();   //数码管扫描显示
  80   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    237    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
