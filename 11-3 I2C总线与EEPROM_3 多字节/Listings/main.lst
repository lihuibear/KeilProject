C51 COMPILER V9.54   MAIN                                                                  02/16/2024 17:50:17 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include <reg52.h>
   3          
   4          extern void InitLcd1602();
   5          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
   6          extern void I2CStart();
   7          extern void I2CStop();
   8          extern unsigned char I2CReadACK();
   9          extern unsigned char I2CReadNAK();
  10          extern bit I2CWrite(unsigned char dat);
  11          void E2Read(unsigned char *buf, unsigned char addr, unsigned char len);
  12          void E2Write(unsigned char *buf, unsigned char addr, unsigned char len);
  13          void MemToStr(unsigned char *str, unsigned char *src, unsigned char len);
  14          
  15          void main()
  16          {
  17   1          unsigned char i;
  18   1          unsigned char buf[5];
  19   1          unsigned char str[20];
  20   1      
  21   1          InitLcd1602();   //初始化液晶
  22   1          E2Read(buf, 0x90, sizeof(buf));   //从E2中读取一段数据
  23   1          MemToStr(str, buf, sizeof(buf));  //转换为十六进制字符串
  24   1          LcdShowStr(0, 0, str);            //显示到液晶上
  25   1          for (i=0; i<sizeof(buf); i++)     //数据依次+1,+2,+3...
  26   1          {
  27   2              buf[i] = buf[i] + 1 + i;
  28   2          }
  29   1          E2Write(buf, 0x90, sizeof(buf));  //再写回到E2中
  30   1          
  31   1          while(1);
  32   1      }
  33          void MemToStr(unsigned char *str, unsigned char *src, unsigned char len)
  34          {
  35   1        unsigned char tmp;
  36   1      
  37   1        while(len--)
  38   1        {
  39   2          tmp = *src >> 4;
  40   2          if(tmp <= 9)
  41   2            *str++ = tmp + '0';
  42   2          else
  43   2            *str++ = tmp - 10 + 'A';
  44   2          tmp = *src & 0x0F;
  45   2          if(tmp <= 9)
  46   2            *str++ = tmp + '0';
  47   2          else
  48   2            *str++ = tmp - 10 + 'A';
  49   2          *str++ = ' ';
  50   2          src++;    
  51   2        }
  52   1      }
  53          void E2Read(unsigned char *buf, unsigned char addr, unsigned char len)
  54          {
C51 COMPILER V9.54   MAIN                                                                  02/16/2024 17:50:17 PAGE 2   

  55   1        do{
  56   2          I2CStart();
  57   2          if(I2CWrite(0x50 << 1))
  58   2          {
  59   3            break;
  60   3          }
  61   2          I2CStop();
  62   2          }while(1);
  63   1        I2CWrite(addr);
  64   1        I2CStart();
  65   1        I2CWrite((0x50 << 1) | 0x01);
  66   1        while(len > 1)
  67   1        {
  68   2          *buf++ = I2CReadACK();
  69   2          len--;
  70   2        }
  71   1        *buf = I2CReadNAK();
  72   1        I2CStop();
  73   1      }
  74          void E2Write(unsigned char *buf, unsigned char addr, unsigned char len)
  75          {
  76   1        while(len--)
  77   1        {
  78   2          do{
  79   3          I2CStart();
  80   3          if(I2CWrite(0x50 << 1))
  81   3          {
  82   4            break;
  83   4          }
  84   3          I2CStop();
  85   3          }while(1);
  86   2          I2CWrite(addr++);
  87   2          I2CWrite(*buf++);
  88   2          I2CStop();  
  89   2        }
  90   1      }
  91          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
