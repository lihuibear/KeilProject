C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:04:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include <reg52.h>
   3          
   4          bit flag1s = 0;          //1s定时标志
   5          unsigned char T0RH = 0;  //T0重载值的高字节
   6          unsigned char T0RL = 0;  //T0重载值的低字节
   7          
   8          void ConfigTimer0(unsigned int ms);
   9          unsigned char IntToString(unsigned char *str, int dat);
  10          extern bit Start18B20();
  11          extern bit Get18B20Temp(int *temp);
  12          extern void InitLcd1602();
  13          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
  14          
  15          void main()
  16          {
  17   1          bit res;
  18   1          int temp;        //读取到的当前温度值
  19   1          int intT, decT;  //温度值的整数和小数部分
  20   1          unsigned char len;
  21   1          unsigned char str[12];
  22   1      
  23   1          EA = 1;            //开总中断
  24   1          ConfigTimer0(10);  //T0定时10ms
  25   1          Start18B20();      //启动DS18B20
  26   1          InitLcd1602();     //初始化液晶
  27   1          
  28   1          while (1)
  29   1          {
  30   2              if (flag1s)  //每秒更新一次温度
  31   2              {
  32   3                  flag1s = 0;
  33   3                  res = Get18B20Temp(&temp);  //读取当前温度
  34   3                  if (res)                    //读取成功时，刷新当前温度显示
  35   3                  {
  36   4                      intT = temp >> 4;             //分离出温度值整数部分
  37   4                      decT = temp & 0xF;            //分离出温度值小数部分
  38   4                      len = IntToString(str, intT); //整数部分转换为字符串
  39   4                      str[len++] = '.';             //添加小数点
  40   4                      decT = (decT*10) / 16;        //二进制的小数部分转换为1位十进制位
  41   4                      str[len++] = decT + '0';      //十进制小数位再转换为ASCII字符
  42   4                      while (len < 6)               //用空格补齐到6个字符长度
  43   4                      {
  44   5                          str[len++] = ' ';
  45   5                      }
  46   4                      str[len] = '\0';              //添加字符串结束符
  47   4                      LcdShowStr(0, 0, str);        //显示到液晶屏上
  48   4                  }
  49   3                  else                        //读取失败时，提示错误信息
  50   3                  {
  51   4                      LcdShowStr(0, 0, "error!");
  52   4                  }
  53   3                  Start18B20();               //重新启动下一次转换
  54   3              }
C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:04:34 PAGE 2   

  55   2          }
  56   1      }
  57          /* 整型数转换为字符串，str-字符串指针，dat-待转换数，返回值-字符串长度 */
  58          unsigned char IntToString(unsigned char *str, int dat)
  59          {
  60   1          signed char i = 0;
  61   1          unsigned char len = 0;
  62   1          unsigned char buf[6];
  63   1          
  64   1          if (dat < 0)  //如果为负数，首先取绝对值，并在指针上添加负号
  65   1          {
  66   2              dat = -dat;
  67   2              *str++ = '-';
  68   2              len++;
  69   2          }
  70   1          do {          //先转换为低位在前的十进制数组
  71   2              buf[i++] = dat % 10;
  72   2              dat /= 10;
  73   2          } while (dat > 0);
  74   1          len += i;     //i最后的值就是有效字符的个数
  75   1          while (i-- > 0)   //将数组值转换为ASCII码反向拷贝到接收指针上
  76   1          {
  77   2              *str++ = buf[i] + '0';
  78   2          }
  79   1          *str = '\0';  //添加字符串结束符
  80   1          
  81   1          return len;   //返回字符串长度
  82   1      }
  83          /* 配置并启动T0，ms-T0定时时间 */
  84          void ConfigTimer0(unsigned int ms)
  85          {
  86   1          unsigned long tmp;  //临时变量
  87   1          
  88   1          tmp = 11059200 / 12;      //定时器计数频率
  89   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
  90   1          tmp = 65536 - tmp;        //计算定时器重载值
  91   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
  92   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
  93   1          T0RL = (unsigned char)tmp;
  94   1          TMOD &= 0xF0;   //清零T0的控制位
  95   1          TMOD |= 0x01;   //配置T0为模式1
  96   1          TH0 = T0RH;     //加载T0重载值
  97   1          TL0 = T0RL;
  98   1          ET0 = 1;        //使能T0中断
  99   1          TR0 = 1;        //启动T0
 100   1      }
 101          /* T0中断服务函数，完成1秒定时 */
 102          void InterruptTimer0() interrupt 1
 103          {
 104   1          static unsigned char tmr1s = 0;
 105   1          
 106   1          TH0 = T0RH;  //重新加载重载值
 107   1          TL0 = T0RL;
 108   1          tmr1s++;
 109   1          if (tmr1s >= 100)  //定时1s
 110   1          {
 111   2              tmr1s = 0;
 112   2              flag1s = 1;
 113   2          }
 114   1      }


C51 COMPILER V9.54   MAIN                                                                  02/17/2024 22:04:34 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    472    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      33
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
