C51 COMPILER V9.54   MAIN                                                                  02/16/2024 18:02:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include <reg52.h>
   3          
   4          extern void InitLcd1602();
   5          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
   6          extern void E2Read(unsigned char *buf, unsigned char addr, unsigned char len);
   7          extern void E2Write(unsigned char *buf, unsigned char addr, unsigned char len);
   8          void MemToStr(unsigned char *str, unsigned char *src, unsigned char len);
   9          
  10          void main()
  11          {
  12   1          unsigned char i;
  13   1          unsigned char buf[5];
  14   1          unsigned char str[20];
  15   1      
  16   1          InitLcd1602();   //初始化液晶
  17   1          E2Read(buf, 0x8E, sizeof(buf));   //从E2中读取一段数据
  18   1          MemToStr(str, buf, sizeof(buf));  //转换为十六进制字符串
  19   1          LcdShowStr(0, 0, str);            //显示到液晶上
  20   1          for (i=0; i<sizeof(buf); i++)     //数据依次+1,+2,+3...
  21   1          {
  22   2              buf[i] = buf[i] + 1 + i;
  23   2          }
  24   1          E2Write(buf, 0x8E, sizeof(buf));  //再写回到E2中
  25   1          
  26   1          while(1);
  27   1      }
  28          /* 将一段内存数据转换为十六进制格式的字符串，
  29             str-字符串指针，src-源数据地址，len-数据长度 */
  30          void MemToStr(unsigned char *str, unsigned char *src, unsigned char len)
  31          {
  32   1          unsigned char tmp;
  33   1      
  34   1          while (len--)
  35   1          {
  36   2              tmp = *src >> 4;           //先取高4位
  37   2              if (tmp <= 9)              //转换为0-9或A-F
  38   2                  *str++ = tmp + '0';
  39   2              else
  40   2                  *str++ = tmp - 10 + 'A';
  41   2              tmp = *src & 0x0F;         //再取低4位
  42   2              if (tmp <= 9)              //转换为0-9或A-F
  43   2                  *str++ = tmp + '0';
  44   2              else
  45   2                  *str++ = tmp - 10 + 'A';
  46   2              *str++ = ' ';              //转换完一个字节添加一个空格
  47   2              src++;
  48   2          }
  49   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  02/16/2024 18:02:42 PAGE 2   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      32
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
