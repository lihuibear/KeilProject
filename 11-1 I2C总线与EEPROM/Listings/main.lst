C51 COMPILER V9.54   MAIN                                                                  02/16/2024 17:10:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>      // 引入 8051 单片机的头文件
   2          #include <intrins.h>    // 内部函数声明
   3          
   4          #define I2CDelay()  {_nop_();_nop_();_nop_();_nop_();}  // 定义延时函数
   5          
   6          sbit I2C_SCL = P3^7;    // 定义 I2C 时钟线引脚
   7          sbit I2C_SDA = P3^6;    // 定义 I2C 数据线引脚
   8          
   9          extern void InitLcd1602();                              // 外部函数声明：初始化液晶
  10          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);  // 外部函数声明：在
             -液晶上显示字符串
  11          
  12          bit I2CAddresing(unsigned char addr);  // 函数声明：I2C 设备寻址
  13          
  14          void main()
  15          {
  16   1          bit ack = 0;                // 定义应答位变量
  17   1          unsigned char str[10];      // 定义字符串数组
  18   1      
  19   1          InitLcd1602();              // 初始化液晶显示屏
  20   1      
  21   1          // 访问设备地址为 0x50 的设备，并将访问结果显示在液晶上
  22   1          ack = I2CAddresing(0x50);
  23   1          str[0] = '5';
  24   1          str[1] = '0';
  25   1          str[2] = ':';
  26   1          str[3] = (unsigned char)ack + '0';
  27   1          str[4] = '\0';
  28   1          LcdShowStr(0, 0, str);
  29   1      
  30   1          // 访问设备地址为 0x62 的设备，并将访问结果显示在液晶上
  31   1          ack = I2CAddresing(0x62);
  32   1          str[0] = '6';
  33   1          str[1] = '2';
  34   1          str[2] = ':';
  35   1          str[3] = (unsigned char)ack + '0';
  36   1          str[4] = '\0';
  37   1          LcdShowStr(8, 0, str);
  38   1          
  39   1          while (1);  // 无限循环
  40   1      }
  41          
  42          // 函数：发送 I2C 起始信号
  43          void I2CStart()
  44          {
  45   1          I2C_SDA = 1;
  46   1          I2C_SCL = 1;
  47   1          I2CDelay();
  48   1          I2C_SDA = 0;
  49   1          I2CDelay();
  50   1          I2C_SCL = 0;
  51   1      }
  52          
  53          // 函数：发送 I2C 停止信号
C51 COMPILER V9.54   MAIN                                                                  02/16/2024 17:10:56 PAGE 2   

  54          void I2CStop()
  55          {
  56   1          I2C_SCL = 0;
  57   1          I2C_SDA = 0;
  58   1          I2CDelay();
  59   1          I2C_SCL = 1;
  60   1          I2CDelay();
  61   1          I2C_SDA = 1;
  62   1          I2CDelay();
  63   1      }
  64          
  65          // 函数：向 I2C 总线写入数据
  66          bit I2CWrite(unsigned char dat)
  67          {
  68   1          bit ack = 0;            // 定义应答位变量
  69   1          unsigned char mask;     // 定义掩码变量
  70   1      
  71   1          for(mask=0x80; mask!=0; mask>>=1)  // 循环处理每一位数据
  72   1          {
  73   2              if((mask&dat) == 0)             // 如果当前位为 0
  74   2                  I2C_SDA = 0;                // 将数据线拉低
  75   2              else                            // 如果当前位为 1
  76   2                  I2C_SDA = 1;                // 将数据线拉高
  77   2              I2CDelay();
  78   2              I2C_SCL = 1;                    // 时钟线拉高，写入数据
  79   2              I2CDelay();
  80   2              I2C_SCL = 0;                    // 时钟线拉低
  81   2          }
  82   1          I2C_SDA = 1;                        // 释放数据线
  83   1          I2CDelay();
  84   1          I2C_SCL = 1;                        // 时钟线拉高，准备接收应答信号
  85   1          ack = I2C_SDA;                      // 读取应答信号
  86   1          I2CDelay();
  87   1          I2C_SCL = 0;                        // 时钟线拉低
  88   1      
  89   1          return ack;                         // 返回应答信号
  90   1      }
  91          
  92          // 函数：向 I2C 总线发送设备地址并检查应答信号
  93          bit I2CAddresing(unsigned char addr)
  94          {
  95   1          bit ack = 0;    // 定义应答位变量
  96   1      
  97   1          I2CStart();                 // 发送起始信号
  98   1          ack = I2CWrite(addr << 1);  // 发送设备地址，并接收应答信号
  99   1          I2CStop();                  // 发送停止信号
 100   1      
 101   1          return ack;                 // 返回应答信号
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
