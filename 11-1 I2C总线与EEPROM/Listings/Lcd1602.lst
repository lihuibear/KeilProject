C51 COMPILER V9.54   LCD1602                                                               02/16/2024 17:10:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\Lcd1602.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE Lcd1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\Lcd1602.lst) TABS(2) OBJECT(.\Objects\Lcd1602.obj)

line level    source

   1          
   2          #include <reg52.h>
   3          
   4          #define LCD1602_DB  P0
   5          sbit LCD1602_RS = P1^0;
   6          sbit LCD1602_RW = P1^1;
   7          sbit LCD1602_E  = P1^5;
   8          
   9          /* 等待液晶准备好 */
  10          void LcdWaitReady()
  11          {
  12   1          unsigned char sta;
  13   1          
  14   1          LCD1602_DB = 0xFF;
  15   1          LCD1602_RS = 0;
  16   1          LCD1602_RW = 1;
  17   1          do {
  18   2              LCD1602_E = 1;
  19   2              sta = LCD1602_DB; //读取状态字
  20   2              LCD1602_E = 0;
  21   2          } while (sta & 0x80); //bit7等于1表示液晶正忙，重复检测直到其等于0为止
  22   1      }
  23          /* 向LCD1602液晶写入一字节命令，cmd-待写入命令值 */
  24          void LcdWriteCmd(unsigned char cmd)
  25          {
  26   1          LcdWaitReady();
  27   1          LCD1602_RS = 0;
  28   1          LCD1602_RW = 0;
  29   1          LCD1602_DB = cmd;
  30   1          LCD1602_E  = 1;
  31   1          LCD1602_E  = 0;
  32   1      }
  33          /* 向LCD1602液晶写入一字节数据，dat-待写入数据值 */
  34          void LcdWriteDat(unsigned char dat)
  35          {
  36   1          LcdWaitReady();
  37   1          LCD1602_RS = 1;
  38   1          LCD1602_RW = 0;
  39   1          LCD1602_DB = dat;
  40   1          LCD1602_E  = 1;
  41   1          LCD1602_E  = 0;
  42   1      }
  43          /* 设置显示RAM起始地址，亦即光标位置，(x,y)-对应屏幕上的字符坐标 */
  44          void LcdSetCursor(unsigned char x, unsigned char y)
  45          {
  46   1          unsigned char addr;
  47   1          
  48   1          if (y == 0)  //由输入的屏幕坐标计算显示RAM的地址
  49   1              addr = 0x00 + x;  //第一行字符地址从0x00起始
  50   1          else
  51   1              addr = 0x40 + x;  //第二行字符地址从0x40起始
  52   1          LcdWriteCmd(addr | 0x80);  //设置RAM地址
  53   1      }
  54          /* 在液晶上显示字符串，(x,y)-对应屏幕上的起始坐标，str-字符串指针 */
C51 COMPILER V9.54   LCD1602                                                               02/16/2024 17:10:56 PAGE 2   

  55          void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str)
  56          {
  57   1          LcdSetCursor(x, y);   //设置起始地址
  58   1          while (*str != '\0')  //连续写入字符串数据，直到检测到结束符
  59   1          {
  60   2              LcdWriteDat(*str++);
  61   2          }
  62   1      }
  63          /* 初始化1602液晶 */
  64          void InitLcd1602()
  65          {
  66   1          LcdWriteCmd(0x38);  //16*2显示，5*7点阵，8位数据接口
  67   1          LcdWriteCmd(0x0C);  //显示器开，光标关闭
  68   1          LcdWriteCmd(0x06);  //文字不动，地址自动+1
  69   1          LcdWriteCmd(0x01);  //清屏
  70   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
