C51 COMPILER V9.54   MAIN                                                                  02/13/2024 17:45:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg52.h>
   2          
   3          sbit KEY_IN_1 = P2^4;
   4          sbit KEY_IN_2 = P2^5;
   5          sbit KEY_IN_3 = P2^6;
   6          sbit KEY_IN_4 = P2^7;
   7          sbit KEY_OUT_1 = P2^3;
   8          sbit KEY_OUT_2 = P2^2;
   9          sbit KEY_OUT_3 = P2^1;
  10          sbit KEY_OUT_4 = P2^0;
  11          signed long beats = 0;
  12          unsigned char KeySta[4][4] = { 
  13            {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  14            };
  15          
  16          unsigned char code KeyCodeMap[4][4] = { //Áü©ÈòµÊåâÈîÆÁºñÂè∑Âà∞Ê†áÂáÜÈîÆÁõòÈîÆÁ†ÅÁöÑÊò†Â∞ÑË°®
  17              { 0x31, 0x32, 0x33, 0x26 }, //Êï∞Â≠óÈîÆ1„ÄÅÊï∞Â≠óÈîÆ2„ÄÅÊï∞Â≠óÈîÆ3„ÄÅÂêë‰∏äÈîÆ
  18              { 0x34, 0x35, 0x36, 0x25 }, //Êï∞Â≠óÈîÆ4„ÄÅÊï∞Â≠óÈîÆ5„ÄÅÊï∞Â≠óÈîÆ6„ÄÅÂêëÂ∑¶ÈîÆ
  19              { 0x37, 0x38, 0x39, 0x28 }, //Êï∞Â≠óÈîÆ7„ÄÅÊï∞Â≠óÈîÆ8„ÄÅÊï∞Â≠óÈîÆ9„ÄÅÂêë‰∏ãÈîÆ
  20              { 0x30, 0x1B, 0x0D, 0x27 }  //Êï∞Â≠óÈîÆ0„ÄÅESCÈîÆ„ÄÅ  ÂõûËΩ¶ÈîÆ„ÄÅ ÂêëÂè≥ÈîÆ
  21            };
  22          void  KeyDriver();
  23          void main()
  24          {
  25   1          EA = 1;       //‰ΩøËÉΩÊÄª‰∏≠Êñ≠
  26   1          TMOD = 0x01;  //ËÆæÁΩÆT0‰∏∫Ê®°Âºè1
  27   1          TH0  = 0xFC;  //‰∏∫T0ËµãÂàùÂÄº0xFC67ÔºåÂÆöÊó∂1ms
  28   1          TL0  = 0x67;
  29   1          ET0  = 1;     //‰ΩøËÉΩT0‰∏≠Êñ≠
  30   1          TR0  = 1;     //ÂêØÂä®T0
  31   1        
  32   1          while (1)
  33   1          {
  34   2              KeyDriver();   //Ë∞ÉÁî®ÊåâÈîÆÈ©±Âä®ÂáΩÊï∞
  35   2          }
  36   1      }
  37          
  38          void StartMotor(signed long angle)
  39          {
  40   1        EA = 0;
  41   1        beats = (angle*4076)/360;
  42   1        EA = 1;
  43   1      }
  44          void StopMotor()
  45          {
  46   1        EA = 0;
  47   1        beats = 0;
  48   1        EA = 1;
  49   1      }
  50          void KeyAction(unsigned char keycode)
  51          {
  52   1        static bit dirMotor = 0;
  53   1        
  54   1        if((keycode >= 0x30) &&(keycode <= 0x39))
C51 COMPILER V9.54   MAIN                                                                  02/13/2024 17:45:05 PAGE 2   

  55   1        {
  56   2          if(dirMotor == 0)
  57   2          {
  58   3            StartMotor(360 * (keycode - 0x30));
  59   3          }
  60   2          else
  61   2          {
  62   3            StartMotor(-360 * (keycode - 0x30));  
  63   3          }
  64   2        }
  65   1        
  66   1        else if(keycode == 0x26)
  67   1        {
  68   2          dirMotor = 0;
  69   2        }
  70   1        else if(keycode == 0x28)
  71   1        {
  72   2          dirMotor = 1;
  73   2        }
  74   1        else if(keycode == 0x25)
  75   1        {
  76   2          StartMotor(90);
  77   2        }
  78   1        else if(keycode == 0x27)
  79   1        {
  80   2          StartMotor(-90);
  81   2        }
  82   1      
  83   1      
  84   1        else if(keycode == 0x1B)
  85   1        {
  86   2          StopMotor();  
  87   2        } 
  88   1         
  89   1      }
  90          void  KeyDriver()
  91          {
  92   1        unsigned char i, j;
  93   1        static  unsigned char backup [4][4] = {
  94   1        {1,1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1,1}
  95   1        };
  96   1      
  97   1        for(i=0; i<4; i++)
  98   1          {
  99   2            for(j=0; j<4; j++)
 100   2            {
 101   3              if(backup[i][j] != KeySta[i][j])
 102   3              {
 103   4                if(backup[i][j] == 0)
 104   4                {
 105   5                  KeyAction(KeyCodeMap[i][j]);
 106   5                }
 107   4                backup[i][j] = KeySta[i][j];
 108   4              }
 109   3            } 
 110   2          }
 111   1      
 112   1        
 113   1      }
 114          
 115          /* ÊåâÈîÆÊâ´ÊèèÂáΩÊï∞ÔºåÈúÄÂú®ÂÆöÊó∂‰∏≠Êñ≠‰∏≠Ë∞ÉÁî®ÔºåÊé®ËçêË∞ÉÁî®Èó¥Èöî1ms */
 116          void KeyScan()
C51 COMPILER V9.54   MAIN                                                                  02/13/2024 17:45:05 PAGE 3   

 117          {
 118   1          unsigned char i;
 119   1          static unsigned char keyout = 0;   //Áü©ÈòµÊåâÈîÆÊâ´ÊèèËæìÂá∫Á¥¢Âºï
 120   1          static unsigned char keybuf[4][4] = {  //Áü©ÈòµÊåâÈîÆÊâ´ÊèèÁºìÂÜ≤Âå∫
 121   1              {0xFF, 0xFF, 0xFF, 0xFF},  {0xFF, 0xFF, 0xFF, 0xFF},
 122   1              {0xFF, 0xFF, 0xFF, 0xFF},  {0xFF, 0xFF, 0xFF, 0xFF}
 123   1          };
 124   1      
 125   1          //Â∞Ü‰∏ÄË°åÁöÑ4‰∏™ÊåâÈîÆÂÄºÁßªÂÖ•ÁºìÂÜ≤Âå∫
 126   1          keybuf[keyout][0] = (keybuf[keyout][0] << 1) | KEY_IN_1;
 127   1          keybuf[keyout][1] = (keybuf[keyout][1] << 1) | KEY_IN_2;
 128   1          keybuf[keyout][2] = (keybuf[keyout][2] << 1) | KEY_IN_3;
 129   1          keybuf[keyout][3] = (keybuf[keyout][3] << 1) | KEY_IN_4;
 130   1          //Ê∂àÊäñÂêéÊõ¥Êñ∞ÊåâÈîÆÁä∂ÊÄÅ
 131   1          for (i=0; i<4; i++)  //ÊØèË°å4‰∏™ÊåâÈîÆÔºåÊâÄ‰ª•Âæ™ÁéØ4Ê¨°
 132   1          {
 133   2              if ((keybuf[keyout][i] & 0x0F) == 0x00)
 134   2              {   //ËøûÁª≠4Ê¨°Êâ´ÊèèÂÄº‰∏∫0ÔºåÂç≥4*4msÂÜÖÈÉΩÊòØÊåâ‰∏ãÁä∂ÊÄÅÊó∂ÔºåÂèØËÆ§‰∏∫ÊåâÈîÆÂ∑≤Á®≥ÂÆöÁöÑÊåâ‰
             -∏ã
 135   3                  KeySta[keyout][i] = 0;
 136   3              }
 137   2              else if ((keybuf[keyout][i] & 0x0F) == 0x0F)
 138   2              {   //ËøûÁª≠4Ê¨°Êâ´ÊèèÂÄº‰∏∫1ÔºåÂç≥4*4msÂÜÖÈÉΩÊòØÂºπËµ∑Áä∂ÊÄÅÊó∂ÔºåÂèØËÆ§‰∏∫ÊåâÈîÆÂ∑≤Á®≥ÂÆöÁöÑÂºπË
             -µ∑
 139   3                  KeySta[keyout][i] = 1;
 140   3              }
 141   2          }
 142   1          //ÊâßË°å‰∏ã‰∏ÄÊ¨°ÁöÑÊâ´ÊèèËæìÂá∫
 143   1          keyout++;                //ËæìÂá∫Á¥¢ÂºïÈÄíÂ¢û
 144   1          keyout = keyout & 0x03;  //Á¥¢ÂºïÂÄºÂä†Âà∞4Âç≥ÂΩíÈõ∂
 145   1          switch (keyout)          //Ê†πÊçÆÁ¥¢ÂºïÔºåÈáäÊîæÂΩìÂâçËæìÂá∫ÂºïËÑöÔºåÊãâ‰Ωé‰∏ãÊ¨°ÁöÑËæìÂá∫ÂºïËÑö
 146   1          {
 147   2              case 0: KEY_OUT_4 = 1; KEY_OUT_1 = 0; break;
 148   2              case 1: KEY_OUT_1 = 1; KEY_OUT_2 = 0; break;
 149   2              case 2: KEY_OUT_2 = 1; KEY_OUT_3 = 0; break;
 150   2              case 3: KEY_OUT_3 = 1; KEY_OUT_4 = 0; break;
 151   2              default: break;
 152   2          }
 153   1      }
 154          
 155          void TurnMotor()
 156          {
 157   1        unsigned char tmp;
 158   1        static unsigned char index = 0;
 159   1        unsigned char code BeatCode[8] = {
 160   1        0x0E, 0x0C, 0x0D, 0x09, 0x0B, 0x03, 0x07, 0x06};
 161   1      
 162   1        if(beats != 0)
 163   1        {
 164   2          if(beats > 0)
 165   2          {
 166   3            index++;
 167   3            index = index & 0x07;
 168   3            beats--;
 169   3          }
 170   2          else
 171   2          {
 172   3            index--;
 173   3            index = index & 0x07;
 174   3            beats++;
 175   3          }
 176   2          tmp = P1;
C51 COMPILER V9.54   MAIN                                                                  02/13/2024 17:45:05 PAGE 4   

 177   2          tmp = tmp & 0xF0;
 178   2          tmp = tmp | BeatCode[index];       
 179   2          P1 = tmp;
 180   2        }
 181   1        else
 182   1        {
 183   2          P1 = P1 | 0x0F;
 184   2        }
 185   1      }
 186          /* T0‰∏≠Êñ≠ÊúçÂä°ÂáΩÊï∞ÔºåÁî®‰∫éÊï∞Á†ÅÁÆ°ÊòæÁ§∫Êâ´Êèè‰∏éÊåâÈîÆÊâ´Êèè */
 187          void InterruptTimer0() interrupt 1
 188          {
 189   1        static bit div = 0;
 190   1      
 191   1        TH0 = 0xFC;
 192   1        TL0 = 0x67;
 193   1      
 194   1        KeyScan();
 195   1      
 196   1        div = ~ div;
 197   1        if(div == 1)
 198   1        {
 199   2          TurnMotor();
 200   2        }
 201   1      
 202   1      
 203   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    715    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     54       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
